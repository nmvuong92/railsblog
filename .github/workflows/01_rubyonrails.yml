# This workflow uses actions that are not certified by GitHub.  They are
# provided by a third-party and are governed by separate terms of service,
# privacy policy, and support documentation.
#
# This workflow will install a prebuilt Ruby version, install dependencies, and
# run tests and linters.
name: "Ruby on Rails CI"
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  test:
    env:
      REDIS_URL: 'redis://localhost:6379/1'
      DB_HOST: 'localhost'
      DB_DATABASE: 'rails_test'
      DB_USERNAME: 'rails'
      DB_PASSWORD: 'password'
      RAILS_ENV: test
      DATABASE_URL: "postgres://rails:password@localhost:5432/rails_test"
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11-alpine
        ports:
          - "5432:5432"
        env:
          POSTGRES_DB: ${{env.DB_DATABASE}}
          POSTGRES_USER: ${{env.DB_USERNAME}}
          POSTGRES_PASSWORD: ${{env.DB_PASSWORD}}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      # Add or replace dependency steps here
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0.5' # Not needed with a .ruby-version file
          bundler-cache: true
      # Add or replace database setup steps here
      - name: Set up database schema
        run: bin/rails db:schema:load
          -
      # Sets up the Node environment.
      - name: Set up node
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'yarn'
      # Installs Yarn and runs 'yarn install'.
      - name: Set up Yarn
        run: |
          npm install yarn
          yarn install

      # Add or replace test runners here
      - name: Run tests (rspec)
        run: bundle exec rspec

  audit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: 'Bundler Audit'
        uses: andrewmcodes/bundler-audit-action@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  #  rubocop:
  #    name: Rubocop Action
  #    runs-on: ubuntu-latest
  #    timeout-minutes: 2
  #    steps:
  #      - uses: actions/checkout@v3
  #      - name: RuboCop Linter
  #        uses: andrewmcodes/rubocop-linter-action@v3.3.0
  #        with:
  #          action_config_path: ".github/config/rubocop.yml"
  #        env:
  #          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  gitleaks:
    name: gitleaks-action
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This variable is automatically assigned by GitHub when any action gets kicked off.
          GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE}} # Only required for Organizations, not personal accounts.

  publish-release:
    name: Automatic Releases
    runs-on: ubuntu-latest
    steps:
      - uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          title: "Development Build"
        
